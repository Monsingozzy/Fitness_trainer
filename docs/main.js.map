{"version":3,"sources":["./src/app/training/current-training/current-training.component.ts","./src/app/training/current-training/current-training.component.html","./src/app/navigation/sidenav-list/sidenav-list.component.ts","./src/app/navigation/sidenav-list/sidenav-list.component.html","./src/app/training/new-training/new-training.component.ts","./src/app/training/new-training/new-training.component.html","./src/environments/environment.ts","./src/app/training/current-training/stop-training.component.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/amterial.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/training/training.component.html","./src/app/training/training.component.ts","./src/app/app.module.ts","./src/app/app-router.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/training/past-training/past-training.component.ts","./src/app/training/past-training/past-training.component.html","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { StopTrainingComponent } from './stop-training.component';\nimport { Component, OnInit,EventEmitter,Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.css']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  @Output() TrainingStop=new EventEmitter();\n  process=0;\n  timer:any;\n  constructor(private dailog:MatDialog) { }\n\n  ngOnInit(): void {\n    // this.timer=setInterval(()=>{\n    //   this.process=this.process+1;\n    //   if(this.process>=100){\n    //     clearInterval(this.timer)\n    //   }\n\n    // },1000)\n    this.Starttimer();\n\n  }\n  Starttimer(){\n    this.timer=setInterval(()=>{\n      this.process=this.process+1;\n      if(this.process>=100){\n        clearInterval(this.timer)\n      }\n\n    },1000)\n  }\n  Stoptimer(){\n    clearInterval(this.timer);\n    const dailogRef=this.dailog.open(StopTrainingComponent,{\n      data:{\n      process:this.process\n      }\n\n    });\n    dailogRef.afterClosed().subscribe(result=>{\n      if(result){\n        this.TrainingStop.emit();\n      }else{\n\n        this.Starttimer();\n      }\n      });\n  }\n\n\n}\n","<section class=\"current-training\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-progress-spinner mode=\"determinate\" [value]=\"process\"></mat-progress-spinner>\n  <h1>{{process}}%</h1>\n  <p>keep on doing, you can do it!</p>\n  <section fxLayout=\"row\" fxLayoutGap=\"40px\">\n  <!-- <button mat-raised-button color=\"accent\" (click)=\"Starttimer()\">Start</button> -->\n  <button mat-raised-button color=\"accent\" (click)=\"Stoptimer()\">Stop</button>\n</section>\n\n</section>\n","import { Component, OnInit,EventEmitter,Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.css']\n})\nexport class SidenavListComponent implements OnInit {\n@Output() closenav=new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onclose(){\n    this.closenav.emit();\n  }\n\n}\n","<mat-nav-list (click)=\"onclose()\" >\n    <h1 class=\"nav-caption\">Menu</h1>\n    <a mat-list-item routerLink=\"/\">\n      <mat-icon>home</mat-icon>\n      <span class=\"nav-caption\">Home</span>\n      </a>\n    <a mat-list-item routerLink=\"/signup\"><mat-icon>subject</mat-icon>\n      <span class=\"nav-caption\">Signup</span></a>\n    <a mat-list-item routerLink=\"/login\"><mat-icon>login</mat-icon>\n      <span class=\"nav-caption\" >Login</span></a>\n    <a mat-list-item routerLink=\"/training\"><mat-icon>fitness_center</mat-icon>\n      <span class=\"nav-caption\">Training</span></a>\n      <a mat-list-item ><mat-icon>logout</mat-icon>\n        <span class=\"nav-caption\">Logout</span></a>\n  </mat-nav-list>\n","import { Component, OnInit,EventEmitter,Output } from '@angular/core';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.css']\n})\nexport class NewTrainingComponent implements OnInit {\n@Output() trainingstarted=new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onStartTraining(){\n    this.trainingstarted.emit();\n  }\n\n}\n","<section class=\"new-training\" fxLayout fxLayoutAlign=\"center\">\n  <mat-card fxFlex=\"400px\" fxFlex.xs=\"300px\" style=\"padding: 20px;margin: 10px;\">\n    <mat-card-title fxLayoutAlign=\"center\">Time to start workout</mat-card-title>\n    <mat-card-content fxLayoutAlign=\"center\">\n      <mat-form-field >\n        <mat-select placeholder=\"Type of excersise\">\n          <mat-option value=\"crunches\">\n            Crunches\n          </mat-option>\n          <mat-option value=\"touch-toes\">\n            Touch Toes\n          </mat-option>\n          <mat-option value=\"side-lunges\">\n            Side Lunges\n          </mat-option>\n          <mat-option value=\"burpees\">\n            Burpees\n          </mat-option>\n  </mat-select>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions fxLayoutAlign=\"center\">\n      <button type=\"submit\" mat-raised-button (click)=\"onStartTraining()\">Start</button>\n    </mat-card-actions>\n  </mat-card>\n\n\n\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from \"@angular/core\";\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog'\r\n\r\n\r\n@Component({\r\n  selector :'app-stop-training',\r\n  template :`<p mat-dialog-title>Are you sure?</p>\r\n   <p mat-dialog-title>You already completed {{passedData.process}}%</p>\r\n              <mat-dialog-actions>\r\n                <button mat-button [mat-dialog-close]=\"true\">Yes</button>\r\n                <button mat-button [mat-dialog-close]=\"false\">No</button>\r\n               </mat-dialog-actions>`\r\n\r\n\r\n})\r\nexport class StopTrainingComponent{\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData:any){}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n<div class=\"welcome\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-md=\"row\" fxLayoutGap=\"30px\">\r\n  <section>\r\n    <h1>ACTIVITY</h1>\r\n    <p>Stay active and enjoy better health and more fun !</p>\r\n  </section>\r\n  <section>\r\n    <h1>COMMUNITY</h1>\r\n    <p>Get to know other people who share passion</p>\r\n  </section>\r\n  <section>\r\n    <h1>CHALLENGES</h1>\r\n    <p>Never stop! Dive into new challenges every day</p>\r\n  </section>\r\n</div>\r\n\r\n<div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"background-color: rgb(253, 227, 123);position: fixed; bottom: 0;width: 100%;height: 50px;\">\r\n\r\n  <h1 style=\"color:rgb(221, 186, 30);\"><mat-icon>warning</mat-icon>This application is still in development mode </h1>\r\n</div>\r\n\r\n","<form fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"center center\" #form_data=\"ngForm\" (ngSubmit)=\"onsubmit(form_data)\" >\n    <h1>Signup !</h1>\n        <mat-form-field>\n            <input \n                type=\"email\" \n                matInput \n                placeholder=\"Your email\" \n                ngModel \n                name=\"Username\"\n                email\n                required\n                #emailInput='ngModel'/>\n                <mat-error *ngIf=\"emailInput.hasError('required')\">please enter email</mat-error>\n                <mat-error *ngIf=\"!emailInput.hasError('required')\">Email is not valid</mat-error>\n\n        </mat-form-field>\n\n        <mat-form-field hintLabel=\"At Least 6 Charecters Long.\">\n            <input \n                type=\"password\" \n                matInput \n                placeholder=\"Your password\" \n                ngModel  \n                name=\"Password\"\n                password\n                required\n                #pwLength=\"ngModel\"\n                 />\n                 <mat-hint align=\"end\">{{pwLength.value?.length}} /6</mat-hint>\n                 <mat-error *ngIf=\"pwLength.hasError('required')\">please Enter password</mat-error>\n\n        </mat-form-field>\n        <mat-form-field>\n            <input [max]=\"maxdate\" matInput [matDatepicker]=\"picker\" ngModel name=\"birthdate\" required placeholder=\"Your Birthdate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <mat-checkbox ngModel name=\"agree\" required color=\"primary\">agree to terms and condition</mat-checkbox>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"form_data.invalid\">Submit</button>\n       \n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\nmaxdate: Date;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.maxdate=new Date();\n    this.maxdate.setFullYear(this.maxdate.getFullYear()-18)\n  }\n\n  onsubmit(form:NgForm){\n    console.log(form.value.Username);\n  }\n\n}\n","import { MatButtonModule } from '@angular/material/button';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatSliderModule} from '@angular/material/slider';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n    imports:[MatSliderModule,\r\n             MatButtonModule,\r\n             MatIconModule,\r\n             MatFormFieldModule,\r\n             MatInputModule,\r\n             MatDatepickerModule,\r\n             MatNativeDateModule,\r\n             MatCheckboxModule,\r\n             MatSidenavModule,\r\n             MatToolbarModule,\r\n             MatListModule,\r\n             MatTabsModule,\r\n             MatCardModule,\r\n             MatSelectModule,\r\n             MatProgressSpinnerModule,\r\n             MatDialogModule\r\n\r\n\r\n            ],\r\n    exports:[MatSliderModule,\r\n             MatButtonModule,\r\n             MatIconModule,\r\n             MatFormFieldModule,\r\n             MatInputModule,\r\n             MatDatepickerModule,\r\n             MatNativeDateModule,\r\n             MatCheckboxModule,\r\n             MatSidenavModule,\r\n             MatToolbarModule,\r\n             MatListModule,\r\n             MatTabsModule,\r\n             MatCardModule,\r\n             MatSelectModule,\r\n             MatProgressSpinnerModule,\r\n             MatDialogModule,\r\n            ]\r\n\r\n})\r\n\r\n\r\nexport class MaterialModule{}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-first-angular-app';\n}\n","<mat-sidenav-container>\r\n  <mat-sidenav class=\"side_nav\"  #sidenav role=\"navigation\">\r\n    <app-sidenav-list (closenav)=\"sidenav.toggle()\"></app-sidenav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n   <app-header (sidenavToggle)=\"sidenav.toggle()\"></app-header>\r\n     <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n","<mat-tab-group *ngIf=\"!ongoingTraining\">\n  <mat-tab label=\"New Exercise\">\n    <app-new-training (trainingstarted)=\"ongoingTraining=true\"></app-new-training>\n  </mat-tab>\n  <mat-tab label=\"Past Exercise\">\n    <app-past-training></app-past-training>\n  </mat-tab>\n\n</mat-tab-group>\n<app-current-training *ngIf=\"ongoingTraining\" (TrainingStop)=\"ongoingTraining=false\"></app-current-training>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit {\n  ongoingTraining=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { StopTrainingComponent } from './training/current-training/stop-training.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './amterial.module';\nimport { RouterModule } from '@angular/router';\nimport { AppRouting } from './app-router.module';\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatDialogModule } from '@angular/material/dialog';\n\n\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { TrainingComponent } from './training/training.component';\nimport { CurrentTrainingComponent } from './training/current-training/current-training.component';\nimport { NewTrainingComponent } from './training/new-training/new-training.component';\nimport { PastTrainingComponent } from './training/past-training/past-training.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    TrainingComponent,\n    CurrentTrainingComponent,\n    NewTrainingComponent,\n    PastTrainingComponent,\n    WelcomeComponent,\n    HeaderComponent,\n    SidenavListComponent,\n    StopTrainingComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRouting,\n    RouterModule,\n    MaterialModule,\n    FlexLayoutModule,\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents:[StopTrainingComponent]\n})\nexport class AppModule { }\n","import { TrainingComponent } from './training/training.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport {RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst route:Routes=[\r\n    { path:\"\",component:WelcomeComponent },\r\n    { path:\"signup\",component:SignupComponent },\r\n    { path:\"login\",component:LoginComponent },\r\n    {path:\"training\",component:TrainingComponent}\r\n\r\n]\r\n\r\n@NgModule({\r\n\r\n    imports:[\r\n        RouterModule.forRoot(route)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\nexport class AppRouting{}","\n\n<form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" #Login_data=\"ngForm\" (ngSubmit)=\"onLoginsubmit(Login_data)\">\n    <h1>login !</h1>\n        <mat-form-field>\n            <input type=\"email\" \n            matInput \n            required \n            ngModel \n            name=\"emali\" \n            placeholder=\"Email\"\n            #emailInput='ngModel'\n            />\n                <mat-error *ngIf=\"emailInput.hasError('required')\">please enter email</mat-error>\n                <mat-error *ngIf=\"!emailInput.hasError('required')\">Email is not valid</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input \n            type=\"password\" \n            matInput \n            placeholder=\"Your password\" \n            ngModel  \n            name=\"Password\"\n            password\n            required\n            #pwLength=\"ngModel\"\n             />\n             <mat-hint align=\"end\">{{pwLength.value?.length}} /6</mat-hint>\n             <mat-error *ngIf=\"pwLength.hasError('required')\">please Enter password</mat-error>\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"Login_data.invalid\">Submit</button>\n</form>\n","import { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onLoginsubmit(logindata:NgForm){\n    console.log(logindata);\n\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-past-training',\n  templateUrl: './past-training.component.html',\n  styleUrls: ['./past-training.component.css']\n})\nexport class PastTrainingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>past-training works!</p>\n","import { Component, OnInit,EventEmitter,Output } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n@Output() sidenavToggle=new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\nonToggleSidenav(){\r\n  this.sidenavToggle.emit();\r\n}\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" >\n  <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n<div fxHide.gt-xs >\n      <button mat-icon-button (click)=\"onToggleSidenav()\">\n        <mat-icon >menu</mat-icon>\n      </button>\n    </div>\n    <div style=\"padding-left: 20px;\"><a routerLink=\"/\"><img src=\"../../../assets/imggym.png\" > </a></div>\n  </div>\n<div fxFlex></div>\n  <div fxFlex  fxHide.xs fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"40px\">\n    <a routerLink=\"/\">Home</a>\n    <a routerLink=\"/signup\">Signup</a>\n    <a routerLink=\"/login\">login</a>\n    <a routerLink=\"/training\">Training</a>\n    <a >Logout</a>\n\n   </div>\n  </div>\n\n\n</mat-toolbar>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport \"hammerjs\";\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}